{"version":3,"sources":["../../src/api/index.js"],"names":["hashCode","s","split","reduce","a","b","charCodeAt","config","db","api","use","get","req","res","mockResponse","firstName","lastName","id","organizationUnit","label","localOrganizationUnits","json","hello","status","interviewerFirstName","interviewerLastName","mockStudyLine1","managementStartDate","endDate","put","interviewerStartDate","identificationPhaseStartDate","collectionStartDate","collectionEndDate","allocated","toProcessInterviewer","toAffect","toFollowUp","toReview","finalized","preference","surveyUnitCount","unicityString","params","query","state","unicityCode","Math","abs","ssech","location","city","finalizationDate","reading","viewed","interviewer","comments","closingCause","setTimeout","campaign","questionnaireState","contactOutcome","states","date","type","count","questionnaireId","Date","day","getDay","month","getMonth","nvmCount","nnsCount","anvCount","vinCount","vicCount","prcCount","aocCount","apsCount","insCount","wftCount","wfsCount","tbrCount","finCount","qnaCount","qnaFinCount","nvaCount","npaCount","npiCount","rowCount","total","inaCount","refCount","impCount","iniCount","alaCount","wamCount","oosCount","Number","organizationUnits","idDem","labelDem","isLocal","france"],"mappings":"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","file":"index.js","sourcesContent":["import { version } from \"../../package.json\";\nimport { Router } from \"express\";\nimport facets from \"./facets\";\n\nconst hashCode = function(s){\n  return s.split(\"\").reduce(function(a,b){a=((a<<5)-a)+b.charCodeAt(0);return a&a},0);              \n}\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  // mount the facets resource\n  api.use(\"/facets\", facets({ config, db }));\n\n  //header\n  api.get(\"/user\", (req, res) => {\n    const mockResponse = {\n      firstName: \"Chloé\",\n      lastName: \"Dupont\",\n      id: \"USR1\",\n      organizationUnit: {\n        id: \"OU-NATIONAL\",\n        label: \"National organizational unit\",\n      },\n      localOrganizationUnits: [\n        {\n          id: \"OU-NORTH\",\n          label: \"North region organizational unit\",\n        },\n        {\n          id: \"OU-SOUTH\",\n          label: \"South region organizational unit\",\n        },\n      ],\n    };\n\n    res.json(mockResponse);\n  });\n\n  //header\n  api.get(\"/preferences\", (req, res) => {\n    const mockResponse = {\n      hello: \"hello\",\n    };\n\n    res.status(200).json(mockResponse);\n  });\n\n  api.get(\"/survey-units/state/FIN\", (req, res) => {\n    const mockResponse = {\n      hello: \"hello\",\n    };\n\n    res.status(404).json(mockResponse);\n  });\n\n  // TODO: API à dev sur pearlJam pour le select d'interviewers de la Dem\n    api.get(\"/interviewers\", (req, res) => {\n    const mockResponse = [\n      {\n        id: \"INTW5\",\n        interviewerFirstName: \"Chloé\",\n        interviewerLastName: \"Dupont\",\n      },\n      {\n        id: \"INTW6\",\n        interviewerFirstName: \"Jacques\",\n        interviewerLastName: \"Boulanger\",\n      },\n      {\n        id: \"INTW7\",\n        interviewerFirstName: \"Thierry\",\n        interviewerLastName: \"Fabres\",\n      },\n      {\n        id: \"INTW8\",\n        interviewerFirstName: \"Bertrand\",\n        interviewerLastName: \"Renard\",\n      },\n      {\n        id: \"INTW9\",\n        interviewerFirstName: \"Emilie\",\n        interviewerLastName: \"Boulanger\",\n      },\n      {\n        id: \"INTW10\",\n        interviewerFirstName: \"Renée\",\n        interviewerLastName: \"Dupont\",\n      },\n      {\n        id: \"INTW11\",\n        interviewerFirstName: \"Alphonse\",\n        interviewerLastName: \"Delmarre\",\n      },\n    ];\n\n    res.json(mockResponse);\n  });\n\n  // TODO: API à dev sur pearlJam pour la monitoring table BY_SURVEY_ONE_INTERVIEWER  (date en query param)\n  api.get(\"/interviewer/:id/campaigns\", (req, res) => {\n    const mockStudyLine1 = [\n      {\n        id: \"simpsons2020x00\",\n        label: \"Survey on the Simpsons tv show 2020\",\n        managementStartDate: 1576801000000,\n        endDate: 1641514600000,\n      },\n      {\n        id: \"vqs2021x00\",\n        label: \"Everyday life and health survey 2021\",\n        managementStartDate: 1576801000000,\n        endDate: 1641514600000,\n      },\n      {\n        id: \"simpsosfqns2020x00\",\n        label: \"Survey on something 2020\",\n        managementStartDate: 1576801000000,\n        endDate: 1641514600000,\n      },\n    ]\n\n      res.json(mockStudyLine1);\n  });\n\n  api.put(\"/survey-unit/:id/state/:state\", (req, res) => {\n    const mockResponse = {\n      hello: \"hello\",\n    };\n    res.status(200).json(mockResponse);\n  })\n\n  api.put(\"/survey-unit/:id/viewed\", (req, res) => {\n    const mockResponse = {\n      hello: \"hello\",\n    };\n    res.status(200).json(mockResponse);\n  })\n\n  //TODO Review/Finalized updateComment\n  api.put(\"/survey-unit/:id/comment/:comment\", (req, res) => {\n    const mockResponse = {\n      hello: \"hello\",\n    };\n    res.status(200).json(mockResponse);\n  })\n\n  // main screen\n  api.get(\"/campaigns/\", (req, res) => {\n    const mockStudyLine1 = [\n      {\n        id: \"simpsons2020x00\",\n        label: \"Survey on the Simpsons tv show 2020\",\n        managementStartDate: 1576801000000,\n        interviewerStartDate: 1575937000000,\n        identificationPhaseStartDate: 1577233000000,\n        collectionStartDate: 1577837800000,\n        collectionEndDate: 1640996200000,\n        endDate: 1641514600000,\n        allocated: 4,\n        toProcessInterviewer: 0,\n        toAffect: 0,\n        toFollowUp: 0,\n        toReview: 0,\n        finalized: 0,\n        preference: true,\n      },\n      {\n        id: \"vqs2021x00\",\n        label: \"Everyday life and health survey 2021\",\n        managementStartDate: 1576801000000,\n        interviewerStartDate: 1575937000000,\n        identificationPhaseStartDate: 1577233000000,\n        collectionStartDate: 1577837800000,\n        collectionEndDate: 1640996200000,\n        endDate: 1641514600000,\n        allocated: 4,\n        toProcessInterviewer: 0,\n        toAffect: 0,\n        toFollowUp: 0,\n        toReview: 0,\n        finalized: 0,\n        preference: true,\n      },\n      {\n        id: \"simpsosfqns2020x00\",\n        label: \"Survey on something 2020\",\n        managementStartDate: 1576801000000,\n        interviewerStartDate: 1575937000000,\n        identificationPhaseStartDate: 1577233000000,\n        collectionStartDate: 1577837800000,\n        collectionEndDate: 1640996200000,\n        endDate: 1641514600000,\n        allocated: 4,\n        toProcessInterviewer: 0,\n        toAffect: 0,\n        toFollowUp: 0,\n        toReview: 0,\n        finalized: 0,\n        preference: true,\n      },\n      {\n        id: \"vqs2fsqe021x00\",\n        label: \"Everyday life and health survey 2022\",\n        managementStartDate: 1576801000000,\n        interviewerStartDate: 1575937000000,\n        identificationPhaseStartDate: 1577233000000,\n        collectionStartDate: 1577837800000,\n        collectionEndDate: 1640996200000,\n        endDate: 1641514600000,\n        allocated: 4,\n        toProcessInterviewer: 0,\n        toAffect: 0,\n        toFollowUp: 0,\n        toReview: 0,\n        finalized: 0,\n        preference: false,\n      },\n      {\n        id: \"simpsonqsdfsqes2020x00\",\n        label: \"Survey on something else 2020\",\n        managementStartDate: 1576801000000,\n        interviewerStartDate: 1575937000000,\n        identificationPhaseStartDate: 1577233000000,\n        collectionStartDate: 1577837800000,\n        collectionEndDate: 1640996200000,\n        endDate: 1641514600000,\n        allocated: 4,\n        toProcessInterviewer: 0,\n        toAffect: 0,\n        toFollowUp: 0,\n        toReview: 0,\n        finalized: 0,\n        preference: true,\n      },\n      {\n        id: \"vqs2qfsdfsqe021x00\",\n        label: \"Everyday life and health survey 2026\",\n        managementStartDate: 1576801000000,\n        interviewerStartDate: 1575937000000,\n        identificationPhaseStartDate: 1577233000000,\n        collectionStartDate: 1577837800000,\n        collectionEndDate: 1640996200000,\n        endDate: 1641514600000,\n        allocated: 4,\n        toProcessInterviewer: 0,\n        toAffect: 0,\n        toFollowUp: 0,\n        toReview: 0,\n        finalized: 0,\n        preference: true,\n      },\n      {\n        id: \"simpsonkgs2020x00\",\n        label: \"Survey on the Simpsons tv show 2021\",\n        managementStartDate: 1576801000000,\n        interviewerStartDate: 1575937000000,\n        identificationPhaseStartDate: 1577233000000,\n        collectionStartDate: 1577837800000,\n        collectionEndDate: 1640996200000,\n        endDate: 1641514600000,\n        allocated: 4,\n        toProcessInterviewer: 0,\n        toAffect: 0,\n        toFollowUp: 0,\n        toReview: 0,\n        finalized: 0,\n        preference: false,\n      },\n      {\n        id: \"vqs202fgd1x00\",\n        label: \"Everyday life and health survey 2018\",\n        managementStartDate: 1576801000000,\n        interviewerStartDate: 1575937000000,\n        identificationPhaseStartDate: 1577233000000,\n        collectionStartDate: 1577837800000,\n        collectionEndDate: 1640996200000,\n        endDate: 1641514600000,\n        allocated: 4,\n        toProcessInterviewer: 0,\n        toAffect: 0,\n        toFollowUp: 0,\n        toReview: 0,\n        finalized: 0,\n        preference: true,\n      },\n    ];\n\n    res.json(mockStudyLine1);\n  });\n\n  api.get(\"/campaign/:id/interviewers\", (req, res) => {\n    const mockResponse = [\n      {\n        id: \"INTW5\",\n        interviewerFirstName: \"Chloé\",\n        interviewerLastName: \"Dupont\",\n        surveyUnitCount: 84,\n      },\n      {\n        id: \"INTW6\",\n        interviewerFirstName: \"Jacques\",\n        interviewerLastName: \"Boulanger\",\n        surveyUnitCount: 55,\n      },\n      {\n        id: \"INTW7\",\n        interviewerFirstName: \"Thierry\",\n        interviewerLastName: \"Fabres\",\n        surveyUnitCount: 76,\n      },\n      {\n        id: \"INTW8\",\n        interviewerFirstName: \"Bertrand\",\n        interviewerLastName: \"Renard\",\n        surveyUnitCount: 84,\n      },\n      {\n        id: \"INTW9\",\n        interviewerFirstName: \"Emilie\",\n        interviewerLastName: \"Boulanger\",\n        surveyUnitCount: 55,\n      },\n      {\n        id: \"INTW10\",\n        interviewerFirstName: \"Renée\",\n        interviewerLastName: \"Dupont\",\n        surveyUnitCount: 84,\n      },\n      {\n        id: \"INTW11\",\n        interviewerFirstName: \"Alphonse\",\n        interviewerLastName: \"Delmarre\",\n        surveyUnitCount: 55,\n      },\n    ];\n\n    res.json(mockResponse);\n  });\n\n  api.get(\"/campaign/:id/survey-units\", (req, res) => {\n    let unicityString = req.params.id;\n    if(req.query.state){\n      unicityString += req.query.state;\n    }\n    const unicityCode = Math.abs(hashCode(unicityString));\n    const mockResponse = [\n      {\n        id: \"1023\" + unicityCode,\n        ssech: \"hgSkR29\",\n        location: \"95160\",\n        city: \"MONTMORENCY\",\n        finalizationDate: 1561932000000,\n        reading: true,\n        state: 'CLO',\n        viewed: false,\n        interviewer: {\n          id: \"INTW5\",\n          interviewerFirstName: \"Chloé\",\n          interviewerLastName: \"Dupont\",\n        },\n        comments: [\n          {\n              \"type\": \"managementComment\",\n              \"value\": \"Test\"\n          },\n          {\n              \"type\": \"interviewerComment\",\n              \"value\": \"Test\"\n          }\n        ]\n      },\n      {\n        id: \"4811\" + unicityCode,\n        ssech: \"dlcB55jdf\",\n        location: \"90000\",\n        city: \"BELFORT\",\n        finalizationDate: 1561932000000,\n        reading: true,\n        viewed: false,\n        state: 'TBR',\n        interviewer: {\n          id: \"INTW6\",\n          interviewerFirstName: \"Jacques\",\n          interviewerLastName: \"Boulanger\",\n        },\n        comments: [\n          {\n              \"type\": \"managementComment\",\n              \"value\": \"Test\"\n          },\n          {\n              \"type\": \"interviewerComment\",\n              \"value\": \"Test\"\n          }\n        ]\n      },\n      {\n        id: \"1024\" + unicityCode,\n        ssech: \"hgSkR29\",\n        location: \"95160\",\n        city: \"MONTMORENCY\",\n        finalizationDate: 1603304314268,\n        reading: true,\n        viewed: false,\n        state: 'FIN',\n        interviewer: {\n          id: \"INTW5\",\n          interviewerFirstName: \"Chloé\",\n          interviewerLastName: \"Dupont\",\n        },\n        comments: [\n          {\n              \"type\": \"managementComment\",\n              \"value\": \"Test\"\n          },\n          {\n              \"type\": \"interviewerComment\",\n              \"value\": \"Test\"\n          }\n        ]\n      },\n      {\n        id: \"4812\" + unicityCode,\n        ssech: \"dlcB55jdf\",\n        location: \"90000\",\n        city: \"BRIVE-LA-GAILLARDE\",\n        finalizationDate: 1603304314268,\n        reading: true,\n        viewed: false,\n        state: 'VIN',\n        interviewer: {\n          id: \"INTW6\",\n          interviewerFirstName: \"Jacques\",\n          interviewerLastName: \"Boulanger\",\n        },\n        comments: [\n          {\n              \"type\": \"managementComment\",\n              \"value\": \"Test\"\n          },\n          {\n              \"type\": \"interviewerComment\",\n              \"value\": \"Test\"\n          }\n        ]\n      },\n      {\n        id: \"1025\" + unicityCode,\n        ssech: \"hgSkR29\",\n        location: \"95160\",\n        city: \"MONTMORENCY\",\n        finalizationDate: 1603304314268,\n        reading: true,\n        viewed: true,\n        state: 'VIN',\n        interviewer: {\n          id: \"INTW5\",\n          interviewerFirstName: \"Chloé\",\n          interviewerLastName: \"Dupont\",\n        },\n        comments: [\n          {\n              \"type\": \"managementComment\",\n              \"value\": \"Test\"\n          },\n          {\n              \"type\": \"interviewerComment\",\n              \"value\": \"Test\"\n          }\n        ]\n      },\n      {\n        id: \"4813\" + unicityCode,\n        ssech: \"dlcB55jdf\",\n        location: \"90000\",\n        city: \"BELFORT\",\n        finalizationDate: 1603304314268,\n        reading: true,\n        viewed: true,\n        state: 'VIN',\n        interviewer: {\n          id: \"INTW6\",\n          interviewerFirstName: \"Jacques\",\n          interviewerLastName: \"Boulanger\",\n        },\n        comments: [\n          {\n              \"type\": \"managementComment\",\n              \"value\": \"Test\"\n          },\n          {\n              \"type\": \"interviewerComment\",\n              \"value\": \"Test\"\n          }\n        ]\n      },\n      {\n        id: \"1027\" + unicityCode,\n        ssech: \"hgSkR29\",\n        location: \"95160\",\n        city: \"MONTMORENCY\",\n        finalizationDate: 1603304314268,\n        reading: true,\n        viewed: true,\n        state: 'VIN',\n        interviewer: {\n          id: \"INTW5\",\n          interviewerFirstName: \"Chloé\",\n          interviewerLastName: \"Dupont\",\n        },\n        comments: [\n          {\n              \"type\": \"managementComment\",\n              \"value\": \"Test\"\n          },\n          {\n              \"type\": \"interviewerComment\",\n              \"value\": \"Test\"\n          }\n        ]\n      },\n      {\n        id: \"4815\" + unicityCode,\n        ssech: \"dlcB55jdf\",\n        location: \"90000\",\n        city: \"BELFORT\",\n        finalizationDate: 1603304314268,\n        reading: false,\n        viewed: true,\n        state: 'VIN',\n        interviewer: {\n          id: \"INTW7\",\n          interviewerFirstName: \"Thierry\",\n          interviewerLastName: \"Fabres\",\n        },\n        comments: [\n          {\n              \"type\": \"managementComment\",\n              \"value\": \"Test\"\n          },\n          {\n              \"type\": \"interviewerComment\",\n              \"value\": \"Test\"\n          }\n        ]\n      },\n      {\n        id: \"1028\" + unicityCode,\n        ssech: \"hgSkR29\",\n        location: \"95160\",\n        city: \"MONTMORENCY\",\n        finalizationDate: 1603304314268,\n        reading: false,\n        viewed: true,\n        state: 'VIN',\n        interviewer: {\n          id: \"INTW5\",\n          interviewerFirstName: \"Chloé\",\n          interviewerLastName: \"Dupont\",\n        },\n        comments: [\n          {\n              \"type\": \"managementComment\",\n              \"value\": \"Test\"\n          },\n          {\n              \"type\": \"interviewerComment\",\n              \"value\": \"Test\"\n          }\n        ]\n      },\n      {\n        id: \"4816\" + unicityCode,\n        ssech: \"dlcB55jdf\",\n        location: \"90000\",\n        city: \"BELFORT\",\n        finalizationDate: 1603304314268,\n        reading: false,\n        viewed: true,\n        state: 'VIN',\n        interviewer: {\n          id: \"INTW6\",\n          interviewerFirstName: \"Jacques\",\n          interviewerLastName: \"Boulanger\",\n        },\n        comments: [\n          {\n              \"type\": \"managementComment\",\n              \"value\": \"Test\"\n          },\n          {\n              \"type\": \"interviewerComment\",\n              \"value\": \"Test\"\n          }\n        ]\n      },\n      {\n        id: \"1029\" + unicityCode,\n        ssech: \"hgSkR29\",\n        location: \"95160\",\n        city: \"MONTMORENCY\",\n        finalizationDate: 1603304314268,\n        reading: false,\n        viewed: true,\n        state: 'VIN',\n        interviewer: {\n          id: \"INTW7\",\n          interviewerFirstName: \"Thierry\",\n          interviewerLastName: \"Fabres\",\n        },\n      },\n      {\n        id: \"4817\" + unicityCode,\n        ssech: \"dlcB55jdf\",\n        location: \"90000\",\n        city: \"BELFORT\",\n        finalizationDate: 1603304314268,\n        reading: false,\n        viewed: true,\n        state: 'VIN',\n        interviewer: {\n          id: \"INTW6\",\n          interviewerFirstName: \"Jacques\",\n          interviewerLastName: \"Boulanger\",\n        },\n      },\n      {\n        id: \"1030\" + unicityCode,\n        ssech: \"hgSkR29\",\n        location: \"95160\",\n        city: \"MONTMORENCY\",\n        finalizationDate: 1561932000000,\n        reading: false,\n        viewed: true,\n        state: 'VIN',\n        interviewer: {\n          id: \"INTW5\",\n          interviewerFirstName: \"Chloé\",\n          interviewerLastName: \"Dupont\",\n        },\n      },\n      {\n        id: \"4818\" + unicityCode,\n        ssech: \"dlcB55jdf\",\n        location: \"90000\",\n        city: \"BELFORT\",\n        finalizationDate: 1561932000000,\n        reading: false,\n        viewed: true,\n        state: 'VIN',\n        interviewer: {\n          id: \"INTW6\",\n          interviewerFirstName: \"Jacques\",\n          interviewerLastName: \"Boulanger\",\n        },\n      },\n      {\n        id: \"1032\" + unicityCode,\n        ssech: \"hgSkR29\",\n        location: \"95160\",\n        city: \"MONTMORENCY\",\n        finalizationDate: 1603304314268,\n        reading: false,\n        viewed: true,\n        state: 'VIN',\n        closingCause: 'NPA',\n        interviewer: {\n          id: \"INTW5\",\n          interviewerFirstName: \"Chloé\",\n          interviewerLastName: \"Dupont\",\n        },\n      },\n      {\n        id: \"4819\" + unicityCode,\n        ssech: \"dlcB55jdf\",\n        location: \"90000\",\n        city: \"BELFORT\",\n        finalizationDate: 1603304314268,\n        reading: false,\n        viewed: true,\n        state: 'VIN',\n        closingCause: 'NPI',\n        interviewer: {\n          id: \"INTW6\",\n          interviewerFirstName: \"Jacques\",\n          interviewerLastName: \"Boulanger\",\n        },\n      },\n    ];\n\n    setTimeout(() => {\n        res.json([\n            ...mockResponse,\n          ]);\n      }, 5000);\n    \n  });\n\n  api.get(\"/survey-units/closable\", (req, res) => {\n    const mockResponse = [\n      {\n        id: \"1023\",\n        ssech: \"hgSkR29\",\n        location: \"95160\",\n        city: \"MONTMORENCY\",\n        finalizationDate: 1561932000000,\n        interviewer: {\n          id: \"INTW5\",\n          interviewerFirstName: \"Chloé\",\n          interviewerLastName: \"Dupont\",\n        },\n        campaign:\"Simpsons\",\n        state: \"VIC\",\n        questionnaireState: 'INIT',\n        contactOutcome: 'INA',\n        closingCause: \"NPI\",\n      },\n      {\n        id: \"4811\",\n        ssech: \"dlcB55jdf\",\n        location: \"90000\",\n        city: \"BELFORT\",\n        finalizationDate: 1561932000000,\n        interviewer: {\n          id: \"INTW6\",\n          interviewerFirstName: \"Jacques\",\n          interviewerLastName: \"Boulanger\",\n        },\n        campaign:\"Simpsons\",\n        state: \"VIC\",\n        questionnaireState: 'INIT',\n        contactOutcome: 'INA',\n        closingCause: \"NPA\",\n      },\n      {\n        id: \"1024\",\n        ssech: \"hgSkR29\",\n        location: \"95160\",\n        city: \"MONTMORENCY\",\n        finalizationDate: 1603304314268,\n        interviewer: {\n          id: \"INTW5\",\n          interviewerFirstName: \"Chloé\",\n          interviewerLastName: \"Dupont\",\n        },\n        campaign:\"Simpsons\",\n        questionnaireState: 'TO_EXTRACT',\n        contactOutcome: 'INA',\n        state: \"VIC\"\n      },\n      {\n        id: \"4812\",\n        ssech: \"dlcB55jdf\",\n        location: \"90000\",\n        city: \"BELFORT\",\n        finalizationDate: 1603304314268,\n        interviewer: {\n          id: \"INTW6\",\n          interviewerFirstName: \"Jacques\",\n          interviewerLastName: \"Boulanger\",\n        },\n        campaign:\"VQS\",\n        questionnaireState: 'NULL',\n        state: \"VIC\"\n      },\n      {\n        id: \"1025\",\n        ssech: \"hgSkR29\",\n        location: \"95160\",\n        city: \"MONTMORENCY\",\n        finalizationDate: 1603304314268,\n        interviewer: {\n          id: \"INTW5\",\n          interviewerFirstName: \"Chloé\",\n          interviewerLastName: \"Dupont\",\n        },\n        campaign:\"VQS\",\n        questionnaireState: 'NULL',\n        state: \"VIC\"\n      },\n      {\n        id: \"4813\",\n        ssech: \"dlcB55jdf\",\n        location: \"90000\",\n        city: \"BELFORT\",\n        finalizationDate: 1603304314268,\n        interviewer: {\n          id: \"INTW6\",\n          interviewerFirstName: \"Jacques\",\n          interviewerLastName: \"Boulanger\",\n        },\n        campaign:\"VQS\",\n        questionnaireState: 'NULL',\n        state: \"VIC\"\n      },\n      {\n        id: \"1027\",\n        ssech: \"hgSkR29\",\n        location: \"95160\",\n        city: \"MONTMORENCY\",\n        finalizationDate: 1603304314268,\n        interviewer: {\n          id: \"INTW5\",\n          interviewerFirstName: \"Chloé\",\n          interviewerLastName: \"Dupont\",\n        },\n        campaign:\"VQS\",\n        questionnaireState: 'NULL',\n        state: \"VIC\",\n     \n      },\n      {\n        id: \"4815\",\n        ssech: \"dlcB55jdf\",\n        location: \"90000\",\n        city: \"BELFORT\",\n        finalizationDate: 1603304314268,\n        interviewer: {\n          id: \"INTW7\",\n          interviewerFirstName: \"Thierry\",\n          interviewerLastName: \"Fabres\",\n        },\n        campaign:\"VQS\",\n        questionnaireState: 'NULL',\n        state: \"VIC\"\n      },\n      {\n        id: \"1028\",\n        ssech: \"hgSkR29\",\n        location: \"95160\",\n        city: \"MONTMORENCY\",\n        finalizationDate: 1603304314268,\n        interviewer: {\n          id: \"INTW5\",\n          interviewerFirstName: \"Chloé\",\n          interviewerLastName: \"Dupont\",\n        },\n        campaign:\"VQS\",\n        questionnaireState: 'NULL',\n        state: \"VIC\"\n      },\n      {\n        id: \"4816\",\n        ssech: \"dlcB55jdf\",\n        location: \"90000\",\n        city: \"BELFORT\",\n        finalizationDate: 1603304314268,\n        interviewer: {\n          id: \"INTW6\",\n          interviewerFirstName: \"Jacques\",\n          interviewerLastName: \"Boulanger\",\n        },\n        campaign:\"VQS\",\n        state: \"VIC\",\n        questionnaireState: 'NULL',\n        comments: [\n          {\n              \"type\": \"managementComment\",\n              \"value\": \"Test\"\n          },\n          {\n              \"type\": \"interviewerComment\",\n              \"value\": \"Test\"\n          }\n        ]\n      },\n      {\n        id: \"1029\",\n        ssech: \"hgSkR29\",\n        location: \"95160\",\n        city: \"MONTMORENCY\",\n        finalizationDate: 1603304314268,\n        campaign:\"VQS\",\n        questionnaireState: 'NULL',\n        state: \"VIC\",\n        interviewer: {\n          id: \"INTW7\",\n          interviewerFirstName: \"Thierry\",\n          interviewerLastName: \"Fabres\",\n        },\n      },\n      {\n        id: \"4817\",\n        ssech: \"dlcB55jdf\",\n        location: \"90000\",\n        city: \"BELFORT\",\n        finalizationDate: 1603304314268,\n        campaign:\"VQS\",\n        questionnaireState: 'NULL',\n        state: \"VIC\",\n        interviewer: {\n          id: \"INTW6\",\n          interviewerFirstName: \"Jacques\",\n          interviewerLastName: \"Boulanger\",\n        },\n      },\n      {\n        id: \"1030\",\n        ssech: \"hgSkR29\",\n        location: \"95160\",\n        city: \"MONTMORENCY\",\n        finalizationDate: 1561932000000,\n        campaign:\"VQS\",\n        questionnaireState: 'NULL',\n        state: \"VIC\",\n        interviewer: {\n          id: \"INTW5\",\n          interviewerFirstName: \"Chloé\",\n          interviewerLastName: \"Dupont\",\n        },\n      },\n      {\n        id: \"4818\",\n        ssech: \"dlcB55jdf\",\n        location: \"90000\",\n        city: \"BELFORT\",\n        finalizationDate: 1561932000000,\n        campaign:\"LC 2020\",\n        questionnaireState: 'NULL',\n        state: \"VIC\",\n        interviewer: {\n          id: \"INTW6\",\n          interviewerFirstName: \"Jacques\",\n          interviewerLastName: \"Boulanger\",\n        },\n      },\n      {\n        id: \"1032\",\n        ssech: \"hgSkR29\",\n        location: \"95160\",\n        city: \"MONTMORENCY\",\n        finalizationDate: 1603304314268,\n        campaign:\"LC 2020\",\n        state: \"VIC\",\n        questionnaireState: 'NULL',\n        interviewer: {\n          id: \"INTW5\",\n          interviewerFirstName: \"Chloé\",\n          interviewerLastName: \"Dupont\",\n        },\n      },\n      {\n        id: \"4819\",\n        ssech: \"dlcB55jdf\",\n        location: \"90000\",\n        city: \"BELFORT\",\n        finalizationDate: 1603304314268,\n        campaign:\"LC 2020\",\n        state: \"VIC\",\n        questionnaireState: 'NULL',\n        interviewer: {\n          id: \"INTW6\",\n          interviewerFirstName: \"Jacques\",\n          interviewerLastName: \"Boulanger\",\n        },\n      },\n    ];\n\n    res.json([\n      ...mockResponse,\n\n    ]);\n  });\n\n  api.get(\"/survey-unit/:id/states\", (req, res) => {\n    const mockResponse = {\n      id: \"ue432\",\n      states: [\n        {\n          id: 1,\n          date: 1596188129587,\n          type: \"ANV\",\n        },\n        {\n          id: 2,\n          date: 1596120310000,\n          type: \"ANV\",\n        },\n        {\n          id: 3,\n          date: 1595657530000,\n          type: \"AOC\",\n        },\n      ],\n    };\n\n    res.json(mockResponse);\n  });\n\n  api.get(\"/campaign/:id/survey-units/not-attributed\", (req, res) => {\n    const mockResponse = {\n      count: 0,\n    };\n\n    res.json(mockResponse);\n  });\n\n  api.get(\"/campaign/:id/questionnaire-id\", (req, res) => {\n    const mockResponse = {\n      questionnaireId: \"QXT55\",\n    };\n\n    res.json(mockResponse);\n  });\n\n  api.get(\"/campaign/:id/survey-units/abandoned\", (req, res) => {\n    const mockResponse = {\n      count: 0,\n    };\n    res.json(mockResponse);\n  });\n\n  api.get( \"/campaign/:id/survey-units/interviewer/:idep/state-count\", (req, res) => {\n      const date = new Date(req.query.date);\n      const day = date.getDay();\n      const month = date.getMonth();\n\n      let mockResponse;\n\n      mockResponse = {\n        nvmCount: 22,\n        nnsCount: 22,\n        anvCount: 22,\n        vinCount: 22,\n        vicCount: 22,\n        prcCount: 29,\n        aocCount: 30,\n        apsCount: 12,\n        insCount: 5,\n        wftCount: 0,\n        wfsCount: 0,\n        tbrCount: 2,\n        finCount: 1,\n        qnaCount: 3,\n        qnaFinCount: 3,\n        nvaCount: 0,\n        npaCount: 2,\n        npiCount: 2,\n        rowCount: 2,\n        total: 104,\n      };\n\n      res.json(mockResponse);\n    }\n  );\n\n  api.get( \"/campaign/:id/survey-units/interviewer/:idep/closing-causes\", (req, res) => {\n    const date = new Date(req.query.date);\n    const day = date.getDay();\n    const month = date.getMonth();\n    let mockResponse;\n    mockResponse = {\n      npiCount: 22,\n      npaCount: 22,\n      rowCount: 22,\n      total: 66,\n    };\n    res.json(mockResponse);\n  }\n);\n\n  api.get(\n    \"/campaign/:id/survey-units/interviewer/:idep/contact-outcomes\",\n    (req, res) => {\n      const date = new Date(req.query.date);\n      const day = date.getDay();\n      const month = date.getMonth();\n\n      let mockResponse;\n\n      mockResponse = {\n        inaCount: 33,\n        refCount: 2,\n        impCount: 5,\n        iniCount:11,\n        alaCount: 9,\n        wamCount: 7,\n        oosCount: 8,\n      };\n\n      res.json(mockResponse);\n    }\n  );\n\n  // TODO: ajouter les nouveaux états et revoir les nominations des états clôturés \n  api.get(\"/campaign/:id/survey-units/state-count\", (req, res) => {\n    const date = new Date(Number(req.query.date));\n    const day = date.getDay();\n    const month = date.getMonth();\n\n    const mockResponse = {\n      organizationUnits: [\n        {\n          idDem: \"OU-SOUTH\",\n          labelDem: \"South region organizational unit\",\n          isLocal: true,\n          nvmCount: 22,\n          nnsCount: 22,\n          anvCount: 22,\n          vinCount: 22,\n          vicCount: 22,\n          prcCount: 29,\n          aocCount: 30,\n          apsCount: 12,\n          insCount: 5,\n          wftCount: 0,\n          wfsCount: 0,\n          tbrCount: 2,\n          finCount: 1,\n          qnaCount: 3,\n          qnaFinCount: 3,\n          nvaCount: 0,\n          npaCount: 2,\n          npiCount: 2,\n          rowCount: 2,\n          total: 104,\n        },\n        {\n          idDem: \"OU-NORTH\",\n          labelDem: \"North region organizational unit\",\n          isLocal: true,\n          nvmCount: 22,\n          nnsCount: 22,\n          anvCount: 22,\n          vinCount: 22,\n          vicCount: 22,\n          prcCount: 29,\n          aocCount: 30,\n          apsCount: 12,\n          insCount: 5,\n          wftCount: 0,\n          wfsCount: 0,\n          tbrCount: 2,\n          finCount: 1,\n          qnaCount: 3,\n          qnaFinCount: 3,\n          nvaCount: 0,\n          npaCount: 2,\n        npiCount: 2,\n        rowCount: 2,\n          total: 104,\n        },\n        {\n          idDem: \"OU-NATIONAL\",\n          labelDem: \"National organizational unit\",\n          isLocal: false,\n          nvmCount: 22,\n          nnsCount: 22,\n          anvCount: 22,\n          vinCount: 22,\n          vicCount: 22,\n          prcCount: 29,\n          aocCount: 30,\n          apsCount: 12,\n          insCount: 5,\n          wftCount: 0,\n          wfsCount: 0,\n          tbrCount: 2,\n          finCount: 1,\n          qnaCount: 3,\n          qnaFinCount: 3,\n          nvaCount: 0,\n          npaCount: 2,\n          npiCount: 2,\n          rowCount: 2,\n          total: 104,\n        },\n      ],\n      france: {\n        nvmCount: 22,\n        nnsCount: 22,\n        anvCount: 22,\n        vinCount: 22,\n        vicCount: 22,\n        prcCount: 29,\n        aocCount: 30,\n        apsCount: 12,\n        insCount: 5,\n        wftCount: 0,\n        wfsCount: 0,\n        tbrCount: 2,\n        finCount: 1,\n        qnaCount: 3,\n        qnaFinCount: 3,\n        nvaCount: 0,\n        npaCount: 2,\n        npiCount: 2,\n        rowCount: 2,\n        total: 104,\n      },\n    };\n\n    res.json(mockResponse);\n  });\n\n  // TODO: à dev sur pearlJam pour les tables de collecte par enquete (date en query param)\n  api.get(\"/campaign/:id/survey-units/contact-outcomes\", (req, res) => {\n    const date = new Date(Number(req.query.date));\n    const day = date.getDay();\n    const month = date.getMonth();\n\n    const mockResponse = {\n      organizationUnits: [\n        {\n          idDem: \"OU-SOUTH\",\n          labelDem: \"South region organizational unit\",\n          isLocal: true,\n          inaCount: 33,\n          refCount: 2,\n          impCount: 5,\n          iniCount:11,\n          alaCount: 9,\n          wamCount: 7,\n          oosCount: 8,\n          total: 104,\n        },\n        {\n          idDem: \"OU-NORTH\",\n          labelDem: \"North region organizational unit\",\n          isLocal: true,\n          inaCount: 33,\n          refCount: 2,\n          impCount: 5,\n          iniCount:11,\n          alaCount: 9,\n          wamCount: 7,\n          oosCount: 8,\n          total: 104,\n        },\n        {\n          idDem: \"OU-NATIONAL\",\n          labelDem: \"National organizational unit\",\n          isLocal: false,\n          inaCount: 33,\n          refCount: 2,\n          impCount: 5,\n          iniCount:11,\n          alaCount: 9,\n          wamCount: 7,\n          oosCount: 8,\n          total: 104,\n        },\n      ],\n      france: {\n        inaCount: 33,\n        refCount: 2,\n        impCount: 5,\n        iniCount:11,\n        alaCount: 9,\n        wamCount: 7,\n        oosCount: 8,\n        total: 104,\n      },\n    };\n\n    res.json(mockResponse);\n  });\n\n    // TODO: API à dev sur pearlJam pour le tableau de collecte par campagne du site (date en query param)\n    api.get(\"/campaigns/survey-units/contact-outcomes\", (req, res) => {\n    const date = new Date(Number(req.query.date));\n    const day = date.getDay();\n    const month = date.getMonth();\n\n    const mockResponse = [\n      {\n        campaign: {\n          id: \"simpsons2020x00\",\n          label: \"Survey on the Simpsons tv show 2020\",\n        },\n        inaCount: 33,\n        refCount: 2,\n        impCount: 5,\n        iniCount:11,\n        alaCount: 9,\n        wamCount: 7,\n        oosCount: 8,\n      },\n      {\n        campaign: {\n          id: \"simpsosfqns2020x00\",\n          label: \"Survey on something 2020\",\n        },\n        inaCount: 33,\n        refCount: 2,\n        impCount: 5,\n        iniCount:11,\n        alaCount: 9,\n        wamCount: 7,\n        oosCount: 8,\n      },\n      {\n        campaign: {\n          id: \"vqs2fsqe021x00\",\n          label: \"Everyday life and health survey 2022\",\n        },\n        inaCount: 33,\n        refCount: 2,\n        impCount: 5,\n        iniCount:11,\n        alaCount: 9,\n        wamCount: 7,\n        oosCount: 8,\n      },\n      {\n        campaign: {\n          id: \"simpsonqsdfsqes2020x00\",\n          label: \"Survey on something else 2020\",\n        },\n        inaCount: 33,\n        refCount: 2,\n        impCount: 5,\n        iniCount:11,\n        alaCount: 9,\n        wamCount: 7,\n        oosCount: 8,\n      },\n      {\n        campaign: {\n          id: \"vqs2qfsdfsqe021x00\",\n          label: \"Everyday life and health survey 2026\",\n        },\n        inaCount: 33,\n        refCount: 2,\n        impCount: 5,\n        iniCount:11,\n        alaCount: 9,\n        wamCount: 7,\n        oosCount: 8,\n      },\n      {\n        campaign: {\n          id: \"simpsonkgs2020x00\",\n          label: \"Survey on the Simpsons tv show 2021\",\n        },\n        inaCount: 33,\n        refCount: 2,\n        impCount: 5,\n        iniCount:11,\n        alaCount: 9,\n        wamCount: 7,\n        oosCount: 8,\n      },\n      {\n        campaign: {\n          id: \"vqs202fgd1x00\",\n          label: \"Everyday life and health survey 2018\",\n        },\n        inaCount: 33,\n        refCount: 2,\n        impCount: 5,\n        iniCount:11,\n        alaCount: 9,\n        wamCount: 7,\n        oosCount: 8,\n      },\n    ];\n    res.json(mockResponse);\n  });\n   // TODO state des clotures à ajouter (npaCount, npiCount et rowCount)\n  api.get(\"/campaigns/survey-units/state-count\", (req, res) => {\n    const date = new Date(Number(req.query.date));\n    const day = date.getDay();\n    const month = date.getMonth();\n\n    const mockResponse = [\n      {\n        campaign: {\n          id: \"simpsons2020x00\",\n          label: \"Survey on the Simpsons tv show 2020\",\n        },\n        nvmCount: 22,\n        nnsCount: 22,\n        anvCount: 22,\n        vinCount: 22,\n        vicCount: 22,\n        prcCount: 29,\n        aocCount: 30,\n        apsCount: 12,\n        insCount: 5,\n        wftCount: 0,\n        wfsCount: 0,\n        tbrCount: 2,\n        finCount: 1,\n        qnaCount: 3,\n        qnaFinCount: 3,\n        nvaCount: 0,\n        npaCount: 2,\n        npiCount: 2,\n        rowCount: 2,\n        total: 104,\n      },\n      {\n        campaign: {\n          id: \"simpsosfqns2020x00\",\n          label: \"Survey on something 2020\",\n        },\n        nvmCount: 22,\n        nnsCount: 22,\n        anvCount: 22,\n        vinCount: 22,\n        vicCount: 22,\n        prcCount: 29,\n        aocCount: 30,\n        apsCount: 12,\n        insCount: 5,\n        wftCount: 0,\n        wfsCount: 0,\n        tbrCount: 2,\n        finCount: 1,\n        qnaCount: 3,\n        qnaFinCount: 3,\n        nvaCount: 0,\n        npaCount: 2,\n        npiCount: 2,\n        rowCount: 2,\n        total: 104,\n      },\n      {\n        campaign: {\n          id: \"vqs2fsqe021x00\",\n          label: \"Everyday life and health survey 2022\",\n        },\n        nvmCount: 22,\n        nnsCount: 22,\n        anvCount: 22,\n        vinCount: 22,\n        vicCount: 22,\n        prcCount: 29,\n        aocCount: 30,\n        apsCount: 12,\n        insCount: 5,\n        wftCount: 0,\n        wfsCount: 0,\n        tbrCount: 2,\n        finCount: 1,\n        qnaCount: 3,\n        qnaFinCount: 3,\n        nvaCount: 0,\n        npaCount: 2,\n        npiCount: 2,\n        rowCount: 2,\n        total: 104,\n      },\n      {\n        campaign: {\n          id: \"simpsonqsdfsqes2020x00\",\n          label: \"Survey on something else 2020\",\n        },\n        nvmCount: 22,\n        nnsCount: 22,\n        anvCount: 22,\n        vinCount: 22,\n        vicCount: 22,\n        prcCount: 29,\n        aocCount: 30,\n        apsCount: 12,\n        insCount: 5,\n        wftCount: 0,\n        wfsCount: 0,\n        tbrCount: 2,\n        finCount: 1,\n        qnaCount: 3,\n        qnaFinCount: 3,\n        nvaCount: 0,\n        npaCount: 2,\n        npiCount: 2,\n        rowCount: 2,\n        total: 104,\n      },\n      {\n        campaign: {\n          id: \"vqs2qfsdfsqe021x00\",\n          label: \"Everyday life and health survey 2026\",\n        },\n        nvmCount: 22,\n        nnsCount: 22,\n        anvCount: 22,\n        vinCount: 22,\n        vicCount: 22,\n        prcCount: 29,\n        aocCount: 30,\n        apsCount: 12,\n        insCount: 5,\n        wftCount: 0,\n        wfsCount: 0,\n        tbrCount: 2,\n        finCount: 1,\n        qnaCount: 3,\n        qnaFinCount: 3,\n        nvaCount: 0,\n        npaCount: 2,\n        npiCount: 2,\n        rowCount: 2,\n        total: 104,\n      },\n      {\n        campaign: {\n          id: \"simpsonkgs2020x00\",\n          label: \"Survey on the Simpsons tv show 2021\",\n        },\n        nvmCount: 22,\n        nnsCount: 22,\n        anvCount: 22,\n        vinCount: 22,\n        vicCount: 22,\n        prcCount: 29,\n        aocCount: 30,\n        apsCount: 12,\n        insCount: 5,\n        wftCount: 0,\n        wfsCount: 0,\n        tbrCount: 2,\n        finCount: 1,\n        qnaCount: 3,\n        qnaFinCount: 3,\n        nvaCount: 0,\n        npaCount: 2,\n        npiCount: 2,\n        rowCount: 2,\n        total: 104,\n      },\n      {\n        campaign: {\n          id: \"vqs202fgd1x00\",\n          label: \"Everyday life and health survey 2018\",\n        },\n        nvmCount: 22,\n        nnsCount: 22,\n        anvCount: 22,\n        vinCount: 22,\n        vicCount: 22,\n        prcCount: 29,\n        aocCount: 30,\n        apsCount: 12,\n        insCount: 5,\n        wftCount: 0,\n        wfsCount: 0,\n        tbrCount: 2,\n        finCount: 1,\n        qnaCount: 3,\n        qnaFinCount: 3,\n        nvaCount: 0,\n        npaCount: 2,\n        npiCount: 2,\n        rowCount: 2,\n        total: 104,\n      },\n    ];\n\n    setTimeout(()=>{\n      res.json(mockResponse);\n    }, 5000)\n  });\n\n  // TODO state des clotures à ajouter (npaCount, npiCount et rowCount)\n  api.get(\"/interviewers/survey-units/state-count\", (req, res) => {\n    const date = new Date(Number(req.query.date));\n    const day = date.getDay();\n    const month = date.getMonth();\n\n    const mockResponse = [\n      {\n        interviewer: {\n          id: \"INTW5\",\n          interviewerFirstName: \"Chloé\",\n          interviewerLastName: \"Dupont\",\n        },\n        nvmCount: 22,\n        nnsCount: 22,\n        anvCount: 22,\n        vinCount: 22,\n        vicCount: 22,\n        prcCount: 29,\n        aocCount: 30,\n        apsCount: 12,\n        insCount: 5,\n        wftCount: 0,\n        wfsCount: 0,\n        tbrCount: 2,\n        finCount: 1,\n        qnaCount: 3,\n        qnaFinCount: 3,\n        nvaCount: 0,\n        total: 104,\n      },\n      {\n        interviewer: {\n          id: \"INTW6\",\n          interviewerFirstName: \"Jacques\",\n          interviewerLastName: \"Boulanger\",\n        },\n        nvmCount: 22,\n        nnsCount: 22,\n        anvCount: 22,\n        vinCount: 22,\n        vicCount: 22,\n        prcCount: 29,\n        aocCount: 30,\n        apsCount: 12,\n        insCount: 5,\n        wftCount: 0,\n        wfsCount: 0,\n        tbrCount: 2,\n        finCount: 1,\n        qnaCount: 3,\n        qnaFinCount: 3,\n        nvaCount: 0,\n        total: 104,\n      },\n      {\n        interviewer: {\n          id: \"INTW7\",\n          interviewerFirstName: \"Thierry\",\n          interviewerLastName: \"Fabres\",\n        },\n        nvmCount: 22,\n        nnsCount: 22,\n        anvCount: 22,\n        vinCount: 22,\n        vicCount: 22,\n        prcCount: 29,\n        aocCount: 30,\n        apsCount: 12,\n        insCount: 5,\n        wftCount: 0,\n        wfsCount: 0,\n        tbrCount: 2,\n        finCount: 1,\n        qnaCount: 3,\n        qnaFinCount: 3,\n        nvaCount: 0,\n        total: 104,\n      },\n      {\n        interviewer: {\n          id: \"INTW8\",\n          interviewerFirstName: \"Bertrand\",\n          interviewerLastName: \"Renard\",\n        },\n        nvmCount: 22,\n        nnsCount: 22,\n        anvCount: 22,\n        vinCount: 22,\n        vicCount: 22,\n        prcCount: 29,\n        aocCount: 30,\n        apsCount: 12,\n        insCount: 5,\n        wftCount: 0,\n        wfsCount: 0,\n        tbrCount: 2,\n        finCount: 1,\n        qnaCount: 3,\n        qnaFinCount: 3,\n        nvaCount: 0,\n        total: 104,\n      },\n      {\n        interviewer: {\n          id: \"INTW9\",\n          interviewerFirstName: \"Emilie\",\n          interviewerLastName: \"Boulanger\",\n        },\n        nvmCount: 22,\n        nnsCount: 22,\n        anvCount: 22,\n        vinCount: 22,\n        vicCount: 22,\n        prcCount: 29,\n        aocCount: 30,\n        apsCount: 12,\n        insCount: 5,\n        wftCount: 0,\n        wfsCount: 0,\n        tbrCount: 2,\n        finCount: 1,\n        qnaCount: 3,\n        qnaFinCount: 3,\n        nvaCount: 0,\n        total: 104,\n      },\n      {\n        interviewer: {\n          id: \"INTW10\",\n          interviewerFirstName: \"Renée\",\n          interviewerLastName: \"Dupont\",\n        },\n        nvmCount: 22,\n        nnsCount: 22,\n        anvCount: 22,\n        vinCount: 22,\n        vicCount: 22,\n        prcCount: 29,\n        aocCount: 30,\n        apsCount: 12,\n        insCount: 5,\n        wftCount: 0,\n        wfsCount: 0,\n        tbrCount: 2,\n        finCount: 1,\n        qnaCount: 3,\n        qnaFinCount: 3,\n        nvaCount: 0,\n        total: 104,\n      },\n      {\n        interviewer: {\n          id: \"INTW11\",\n          interviewerFirstName: \"Alphonse\",\n          interviewerLastName: \"Delmarre\",\n        },\n        nvmCount: 22,\n        nnsCount: 22,\n        anvCount: 22,\n        vinCount: 22,\n        vicCount: 22,\n        prcCount: 29,\n        aocCount: 30,\n        apsCount: 12,\n        insCount: 5,\n        wftCount: 0,\n        wfsCount: 0,\n        tbrCount: 2,\n        finCount: 1,\n        qnaCount: 3,\n        qnaFinCount: 3,\n        nvaCount: 0,\n        total: 104,\n      },\n    ];\n    res.json(mockResponse);\n  });\n\n   api.get(\"/campaign/:id/survey-units/not-attributed/state-count\", (req, res) => {\n    const date = new Date(Number(req.query.date));\n    const day = date.getDay();\n    const month = date.getMonth();\n\n    const mockResponse = {\n        nvmCount: 22,\n        nnsCount: 22,\n        anvCount: 22,\n        vinCount: 22,\n        vicCount: 22,\n        prcCount: 29,\n        aocCount: 30,\n        apsCount: 12,\n        insCount: 5,\n        wftCount: 0,\n        wfsCount: 0,\n        tbrCount: 2,\n        finCount: 1,\n        qnaCount: 3,\n        qnaFinCount: 3,\n        nvaCount: 0,\n        npaCount: 0,\n        npiCount: 1,\n        rowCount: 0,\n        total: 104,\n      };\n    res.json(mockResponse);\n  });\n\n      api.get(\"/campaign/:id/survey-units/not-attributed/contact-outcomes\", (req, res) => {\n    const date = new Date(Number(req.query.date));\n    const day = date.getDay();\n    const month = date.getMonth();\n\n    const mockResponse = {\n        inaCount: 33,\n        refCount: 2,\n        impCount: 5,\n        iniCount:11,\n        alaCount: 9,\n        wamCount: 7,\n        oosCount: 8,\n      };\n    res.json(mockResponse);\n  });\n\n  return api;\n};\n"]}